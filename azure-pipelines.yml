pool:
  vmImage: 'Ubuntu-16.04'
  demands:
    - npm

variables:
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '2.1.505'

steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'node-sass $(wwwrootDir)'

- task: gulp@1
  displayName: 'gulp'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  workingDirectory: $(wwwrootDir)
  displayName: 'output build info'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: SonarQubePrepare@4
  displayName: 'Prepare analysis on SonarQube'
  inputs:
    SonarQube: test
    projectKey: c000e0345adbb6766e6a6e9eda6167e297523145
    projectName: SpaceGame-Web-04111

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Debug'

- template: templates/build.yml
  parameters:
    buildConfiguration: 'Release'

- template: templates/test.yml
  parameters:
    buildConfiguration: 'Debug'

- task: PublishTestResults@2
  condition: succeeded()
  inputs:
    testRunner: 'VSTest'
    searchFolder: $(Agent.TempDirectory)
    testResultsFiles: '**/*.trx'

- task: SonarQubeAnalyze@4
  displayName: 'Run SonarQube analysis'

- task: SonarQubePublish@4
  displayName: 'Publish SonarQube results'

- task: PublishBuildArtifacts@1
  condition: succeeded()
  displayName: 'Publish Artifact: drop'